--ASSIGNMENT 3 DFS and BFS--
O(N + E) Where N is the amount amount of nodes and E is the amount of edges
Motivation: The loop lengths are determined by the amount of nodes and edges. They both
go to each node once and each edge once, thus O(N+E). (Technically my non-recursive can visit a node more than once but if it does that iteration is instansly skipped.)


--ASSIGNMENT 3 Transitive Closure--
O(N^2+N*E) Where N is the amount of nodes and E is the amount of edges
Motivation: Since a DFS search is being made on each node (which takes O(N+E) time) we can draw the conclusion
of O(N * (N+E)) represents the method, this can be shortened down to O(N^2 + N*E)

--ASSIGNMENT 3 Connected Components--
O(N^2+N*E) where N is the amount of Nodes and E is the amount of edges
Motivation: The main loop can take up to O(N) and within this loop there is a dfs search taking O(N+E), another loop that can take up to
O(N) and an .addAll that can take up to O(N) as well.
So O(N * ((N+E) + N + N)) would describe the loop.
And to shorten it would give O((N^2 + N*E) + N^2 + N^2)
And to shorten it once again would give O(3N^2 + N*E)
And by the rule of removing constants the end result is O(N^2 + N*E)
